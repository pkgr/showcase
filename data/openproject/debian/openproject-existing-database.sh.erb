#!/bin/bash

set -e

locale-gen --purge en_US.UTF-8
echo -e 'LANG="en_US.UTF-8"\nLANGUAGE="en_US:en"\n' > /etc/default/locale
. /etc/default/locale

CODENAME="<%= codename %>"
BRANCH="<%= branch %>"
REPO_URL="<%= repo_url %>"
SMTP_PASSWORD="<%= ENV.fetch('SMTP_PASSWORD') %>"
APP_NAME="<%= app_name %>"
APP_PREFIX="<%= app_prefix %>"

apt-get update -qq
apt-get install -y curl apt-transport-https sudo
apt-get autoclean
apt-get update -qq

# fetch local machine hostname
HOSTNAME=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)
REQ_SUBJ_SERVER="/C=UK/ST=Warwickshire/L=Leamington/O=Packager/OU=IT Department/CN=${HOSTNAME}"

# generate self-signed certificate to test SSL config
openssl genrsa -des3 -passout pass:x -out server.pass.key 2048 &>/dev/null
openssl rsa -passin pass:x -in server.pass.key -out server.key
rm server.pass.key
openssl req -new -key server.key -out server.csr -subj "${REQ_SUBJ_SERVER}"
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
cp server.crt /etc/ssl/certs/
cp server.key /etc/ssl/private/ && chmod 0640 /etc/ssl/private/server.key

# install MySQL, and populate master password
MYSQL_PASSWORD="p4ssw0rd"
debconf-set-selections <<CONFIG
mysql-server-5.5 mysql-server/root_password password ${MYSQL_PASSWORD}
mysql-server-5.5 mysql-server/root_password_again password ${MYSQL_PASSWORD}
CONFIG
apt-get install -y -f --force-yes mysql-server

mysql -u root -p${MYSQL_PASSWORD} -e "GRANT USAGE ON *.* TO foo@127.0.0.1 IDENTIFIED BY 'bar' REQUIRE SSL; CREATE DATABASE IF NOT EXISTS foobar; GRANT ALL PRIVILEGES ON foobar.* TO foo@127.0.0.1; FLUSH PRIVILEGES;"

mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql -p${MYSQL_PASSWORD}

# generate MySQL SSL config
# https://mifosforge.jira.com/wiki/display/MIFOS/How+to+enable+MySQL+SSL+on+Ubuntu
cd /etc/mysql
rm -f *.pem
openssl genrsa -out ca-key.pem 2048 &> /dev/null
openssl req -sha1 -new -x509 -nodes -days 1000 -key ca-key.pem -out ca-cert.pem -subj '/DC=com/DC=example/CN=ca';
openssl req -sha1 -newkey rsa:2048 -days 1000 -nodes -keyout server-key.pem -out server-req.pem -subj '/DC=com/DC=example/CN=server';
openssl x509 -sha1 -req -in server-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 -out server-cert.pem;
openssl rsa -in server-key.pem -out server-key.pem
openssl req -sha1 -newkey rsa:2048 -days 1000 -nodes -keyout client-key.pem -out client-req.pem -subj '/DC=com/DC=example/CN=client';
openssl x509 -sha1 -req -in client-req.pem -days 1000 -CA ca-cert.pem -CAkey ca-key.pem -set_serial 01 -out client-cert.pem;
# to avoid SSL connection error: protocol version mismatch, http://askubuntu.com/questions/194074/enabling-ssl-in-mysql
openssl rsa -in client-key.pem -out client-key.pem

cat > /etc/mysql/conf.d/ssl.cnf <<MYSQL
[mysqld]
ssl-ca=/etc/mysql/ca-cert.pem
ssl-cert=/etc/mysql/server-cert.pem
ssl-key=/etc/mysql/server-key.pem
MYSQL
service mysql restart

# wait to make sure certificate date is > NOW, otherwise we could get SSL connection error: ASN: before date in the future
sleep 70

wget -qO - https://deb.packager.io/key | sudo apt-key add -
echo "deb ${REPO_URL} ${CODENAME} ${BRANCH}" | sudo tee > /etc/apt/sources.list.d/${APP_NAME}.list
sudo apt-get update -qq

sudo apt-get install ${APP_NAME} -y

cat - <<CONFIG > /etc/${APP_NAME}/installer.dat
mysql/autoinstall reuse
mysql/db_host 127.0.0.1
mysql/db_source_host 127.0.0.1
mysql/db_port 3306
mysql/db_username foo
mysql/db_password bar
mysql/db_name foobar
mysql/ssl yes
mysql/ssl_ca /etc/mysql/ca-cert.pem
mysql/ssl_cert /etc/mysql/client-cert.pem
mysql/ssl_key /etc/mysql/client-key.pem
server/autoinstall install
server/hostname ${HOSTNAME}
server/ssl yes
server/ssl_cert /etc/ssl/certs/server.crt
server/ssl_ca /etc/ssl/certs/server.crt
server/ssl_key /etc/ssl/private/server.key
server/server_path_prefix ${APP_PREFIX}
smtp/autoinstall smtp
smtp/authentication login
smtp/admin_email cyril.rohr@gmail.com
smtp/password ${SMTP_PASSWORD}
smtp/username cyril.rohr@gmail.com
smtp/domain ${HOSTNAME}
smtp/host smtp.mandrillapp.com
smtp/port 587
memcached/autoinstall skip
repositories/svn-install install
repositories/git-install install
repositories/svn-path /var/db/${APP_NAME}/svn
repositories/git-path /var/db/${APP_NAME}/git
repositories/git-http-backend /usr/lib/git-core/git-http-backend/
CONFIG

${APP_NAME} configure
