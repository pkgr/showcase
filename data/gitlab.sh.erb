#!/bin/bash

set -e

CODENAME="<%= codename %>"
BRANCH="<%= branch %>"
REPO_URL="<%= repo_url %>"
APP_NAME="<%= app_name %>"

apt-get update -qq
apt-get install -y curl apt-transport-https sudo
apt-get install -y postgresql postgresql-contrib redis-server

wget -qO - https://deb.packager.io/key | sudo apt-key add -

echo "deb ${REPO_URL} ${CODENAME} ${BRANCH}" | sudo tee /etc/apt/sources.list.d/${APP_NAME}.list
sudo apt-get update -qq
sudo apt-get install -y $APP_NAME

cat >> /etc/ssh/sshd_config <<EOF

PermitUserEnvironment yes
EOF
service ssh reload

echo "CREATE USER \"user\" SUPERUSER PASSWORD 'pass';" | su - postgres -c psql && \
  echo "CREATE DATABASE gitlab;" | su - postgres -c psql && \
  echo "GRANT ALL PRIVILEGES ON DATABASE \"gitlab\" TO \"user\";" | su - postgres -c psql

HOSTNAME=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)

$APP_NAME config:set DATABASE_URL=postgres://user:pass@127.0.0.1/gitlab
$APP_NAME config:set REDIS_URL=redis://127.0.0.1:6379
$APP_NAME config:set GITLAB_URL="http://${HOSTNAME}"

$APP_NAME run rake gitlab:shell:install
$APP_NAME run rake db:schema:load db:seed_fu
$APP_NAME scale web=1 worker=1

sudo apt-get install -y nginx

# setup nginx configuration
cat > /etc/nginx/sites-available/default <<EOF
server {
  listen          80;
  server_name     example.com;
  location / {
    proxy_pass      http://localhost:6000;
  }
}
EOF
 # restart nginx
sudo service nginx restart

echo "http://${HOSTNAME}"
